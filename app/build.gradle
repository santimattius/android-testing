plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin
    id 'kotlin-kapt'
    alias libs.plugins.detekt
    alias libs.plugins.hilt
}

//TODO: jacoco error
//apply from: "$rootDir/gradle/report.gradle"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("./local.properties")))

android {
    compileSdkVersion Integer.valueOf(target_sdk_version)
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId application_id + '.app'
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode Integer.valueOf(version_code)
        versionName version_name
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_KEY", localProperties['apiKey']
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    namespace 'com.santimattius.template'
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

detekt {
    toolVersion = "1.22.0"
    config = files("${project.rootDir}/config/detekt/detekt.yml")
    baseline = file("$rootDir/detekt-baseline.xml")
    autoCorrect = true
}

configurations {
    androidTestImplementation {
        exclude group: 'io.mockk', module: 'mockk-agent-jvm'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libs.kotlin.stdlib
    implementation libs.core.ktx
    implementation libs.glide.core

    implementation libs.bundles.ui
    implementation libs.bundles.lifecycle
    implementation libs.bundles.coroutine
    implementation libs.bundles.retrofit
    implementation libs.bundles.serializable

    implementation libs.room.ktx
    implementation libs.room.runtime
    kapt libs.room.compiler

    //Compose
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation libs.coil.core
    //Hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler

    // For Robolectric tests.
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.44'

    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'

    testImplementation 'junit:junit:4.13.2'
    //Use for Flows
    testImplementation 'app.cash.turbine:turbine:0.12.3'

    //Unit Testing
    testImplementation libs.bundles.unitTesting
    testImplementation project(path: ':shared-test')

    //Android Testing
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation libs.bundles.androidTesting
    androidTestImplementation libs.coroutine.test
    androidTestImplementation project(path: ':shared-test')

}

kapt {
    correctErrorTypes true
}